@model Arkiva.Models.Dokument

@{
    ViewBag.Title = "Ngarko Dokument";

    var url = Context.Request.Url;
    string[] lloji = url.ToString().Split('=');
}

<h4>@ViewBag.Title</h4>
<div class="alert alert-success fade in hide" role="alert" id="alertId">
    Dokumenti u ngarkua me sukses!
</div>

<div align="right">
    @Html.ActionLink("Anulo", "Index", new { LlojiDokumentitId = lloji[1].AsInt() }, new { @class = "btn btn-warning", @style = "font-size: 12px" })
</div>

@using (Html.BeginForm("Create", "Dokuments", FormMethod.Post, new { @id = "registerFormId" ,enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size: 15px " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss"), disabled = "disabled", @readonly = "readonly"} })
                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="padding-top: 10px">
            <span style="color:#ff0000">*</span> @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <style>
                .label1 {
                    background-color: black;
                    color: white;
                    padding: 0.5rem;
                    font-family: sans-serif;
                    border-radius: 0.3rem;
                    cursor: pointer;
                }

                .inputfile {
                    width: 0.1px;
                    height: 0.1px;
                    opacity: 0;
                    overflow: hidden;
                    position: absolute;
                    z-index: -1;
                }

                    .inputfile:focus + label {
                        outline: 1px dotted #000;
                        outline: -webkit-focus-ring-color auto 5px;
                    }

                    .inputfile + label * {
                        pointer-events: none;
                    }
            </style>
            <input type='file' id="getFile" name="Files" class="inputfile" required title="Ju lutem, ngarkoni dokumentin!">
            <label for="getFile" class="label1">Ngarko Dokument</label>
            <script>
                function getInputValue() {
                    var inputVal = document.getElementById("getFile").value;
                    if (inputVal.length != 0) {
                        document.getElementById('alertId').classList.remove('hide')
                    }
                }
            </script>
            @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
        </div>
            @ViewBag.FileStatus
        </div>

        <div class="form-group" style="display: none">
            @Html.LabelFor(model => model.LlojiDokumentitId, "LlojiDokumentitId", htmlAttributes: new { @class = "control-label col-md-2", @style = "font-size: 15px " })
            <div class="col-md-10">
                @Html.DropDownList("LlojiDokumentitId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LlojiDokumentitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="padding-top: 30px">
            <div class="col-md-offset-2 col-md-10">

                <input type="submit" onclick="getInputValue()" value="Shto" class="btn btn-success" , style="font-size: 12px" />
            </div>
        </div>
    </div>
}

<script>
    jQuery.extend(
        jQuery.validator.messages, {
            required: "Hello World"
    });
</script>
