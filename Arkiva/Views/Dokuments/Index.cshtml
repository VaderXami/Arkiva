@model IEnumerable<Arkiva.Models.Dokument>
@{

    var url = Context.Request.Url.ToString();
    string[] tmp = url.Split('=');

    var id = Context.Request.Url;
    string[] str = id.ToString().Split('=');

    ArkivaDBContext db = new ArkivaDBContext();

    var tmpp = 0;

    if (tmp[1].Contains("&search"))
    {
        string[] nId = tmp[1].Split('&');
        tmpp = nId[0].AsInt();
    }
    else
    {
        tmpp = tmp[1].AsInt();
    }

    var list = db.Inspektim.Where(s => s.Id == tmpp).Select(i => i.SubjektId);

    if (!list.Any())
    {
        Response.Redirect("PageNotFound");
    }

    foreach (var tt in list)
    {
        ViewBag.Id = tt;
    }

    var inspektimEmri = db.Inspektim.Where(x => x.Id == tmpp).Select(a => a.Emri);
    var subjektEmri = db.Inspektim.Where(x => x.Id == tmpp).Select(a => a.Subjekt.Emri);

    foreach (var dd in subjektEmri)
    {
        ViewBag.SubjektName = dd;
    }

    foreach (var item in inspektimEmri)
    {
        ViewBag.InspektimName = "Lista e Dokumenteve per inspektimin nga " + item + " per Subjektin " + ViewBag.SubjektName;
    }

    ViewBag.Title = "Dokumente";
}

<h4>@ViewBag.InspektimName</h4>
<p>
    <div align="right">
        <h4>@ViewBag.No</h4>
        @Html.ActionLink("Ngarko Dokument", "Create", new { InspektimId = tmpp }, new { @class = "btn btn-success" })
        @Html.ActionLink("Shko te Inspektimet", "Index", "Inspektims", new { SubjektId = ViewBag.Id }, new { @class = "btn btn-warning" })
    </div>
    @using (Html.BeginForm("Index", "Dokuments", FormMethod.Get))
    {
        <div>
            <p>
                @Html.Hidden("InspektimId")
                @Html.TextBox("search", null, new { @class = "form-control", @placeholder = "Kerko Dokumentin" }) <br />
                <input type="submit" value="Kerko" class="btn btn-info" />
            </p>
        </div>
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Inspektim.Emri)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FileName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Inspektim.Emri)
            </td>
            <td>
                @{ if (item.FileName.Contains(".pdf") || item.FileName.Contains(".ppt"))
                    {
                        <img src="~/Assets/pdfimg.svg.png" style="width: 30px; height: 30px" />
                    }
                    else if (item.FileName.Contains(".docx") || item.FileName.Contains(".doc"))
                    {
                        <img src="~/Assets/wordimg.svg.png" style="width: 30px; height: 30px" />
                    }
                    else if (item.FileName.Contains(".png") || item.FileName.Contains(".jpeg") || item.FileName.Contains(".jpg"))
                    {
                        <img src="~/Assets/imageicon.png" style="width: 30px; height: 30px" />
                    }
                    else if (item.FileName.Contains(".xlsx"))
                    {
                        <img src="~/Assets/excelicon.png" style="width: 30px; height: 30px" />
                    }
                    else if (item.FileName.Contains(".zip") || item.FileName.Contains(".rar"))
                    {
                        <img src="~/Assets/zipfile1.png" style="width: 30px; height: 30px" />
                    }
                    else
                    {
                        <img src="~/Assets/file.png" style="width: 30px; height: 30px" />
                    }
                }
                @Html.DisplayFor(modelItem => item.FileName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data)
            </td>
            <td align="right">
                @{ if (item.FileName.Contains(".pdf"))
                    {
                        <input type="button" class="btn btn-info" value="Shiko" onclick="window.open('@Url.Action("PreviewFilePDF", "Dokuments" , new { id = item.Id })')" />
                    }
                    if (item.FileName.Contains(".jpg"))
                    {
                        <input type="button" class="btn btn-info" value="Shiko" onclick="window.open('@Url.Action("PreviewFileJpg", "Dokuments" , new { id = item.Id })')" />
                    }
                    if (item.FileName.Contains(".png"))
                    {
                        <input type="button" class="btn btn-info" value="Shiko" onclick="window.open('@Url.Action("PreviewFilePNG", "Dokuments" , new { id = item.Id })')" />
                    }
                }
                @Html.ActionLink("Shkarko", "DownLoadFile", new { id = item.Id }, new { @class = "btn btn-primary" })
                @Html.ActionLink("Fshi", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>
<div class="text-danger">
    @ViewBag.Message
</div>
<br />